// Place your key bindings in this file to overwrite the defaults
[
    // Windows and Linux //
    // commands
    {
        "key": "ctrl+e",
        "command": "workbench.action.openRecent",
        "when": "!isMac"
    },
    {
        "key": "ctrl+g",
        "command": "workbench.action.debug.start",
        "when": "!isMac && !inDebugMode"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpen",
        "when": "!isMac"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.showCommands",
        "when": "!isMac"
    },
    // panels
    {
        "key": "ctrl+l",
        "command": "workbench.action.togglePanel",
        "when": "!isMac"
    },
    {
        "key": "ctrl+m",
        "command": "workbench.action.toggleMaximizedPanel",
        "when": "!isMac"
    },
    {
        "key": "ctrl+t",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "!isMac"
    },
    // MacBook //
    // commands
    {
        "key": "cmd+e",
        "command": "workbench.action.openRecent",
        "when": "isMac"
    },
    {
        "key": "cmd+g",
        "command": "workbench.action.debug.start",
        "when": "isMac && !inDebugMode"
    },
    {
        "key": "cmd+j",
        "command": "workbench.action.quickOpen",
        "when": "isMac"
    },
    {
        "key": "cmd+p",
        "command": "workbench.action.showCommands",
        "when": "isMac"
    },
    // panels
    {
        "key": "cmd+l",
        "command": "workbench.action.togglePanel",
        "when": "isMac"
    },
    {
        "key": "cmd+m",
        "command": "workbench.action.toggleMaximizedPanel",
        "when": "isMac"
    },
    {
        "key": "cmd+t",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "isMac"
    },
    // Common //
    // navigate
    {
        "key": "ctrl+tab",
        "command": "workbench.action.navigateEditorGroups",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+tab",
        "command": "workbench.action.focusLastEditorGroup",
        "when": "!editorFocus"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.navigateEditorGroups",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.focusLastEditorGroup",
        "when": "!editorFocus"
    },
    // vim
    {
        "key": "ctrl+a",
        "command": "cursorHome",
        "when": "editorTextFocus && vim.mode == 'Insert'"
    },
    {
        "key": "ctrl+b",
        "command": "cursorLeft",
        "when": "editorTextFocus && vim.mode == 'Insert'"
    },
    {
        "key": "ctrl+d",
        "command": "editor.action.triggerSuggest",
        "when": "textInputFocus && !editorReadonly && vim.mode == 'Insert'"
    },
    {
        "key": "ctrl+e",
        "command": "cursorEnd",
        "when": "editorTextFocus && vim.mode == 'Insert'"
    },
    {
        "key": "ctrl+f",
        "command": "cursorRight",
        "when": "editorTextFocus && vim.mode == 'Insert'"
    },

    // send commands to the terminal //

    // markdown
    {
        "key": "cmd+i l",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "ls -al\r",
        },
        "when": "isMac && editorTextFocus && vim.mode != 'Insert' && resourceLangId == markdown",
    },
]
